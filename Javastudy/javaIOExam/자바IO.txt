입출력을 위한 인터페이스와 클래스들
IO패키지의 I는 input O는 출력

자바 IO는 크게 Byte단위의 입출력과 Char(문자)단위의 입출력 클래스로 나누어짐

Byte단위의 입출력은 모두 InputStram과 OutputStream이라는 추상클래스를 상속받아서
만들어지게 되고

문자단위의 입출력 클래스는 모두 Reader라는 추상클래스와 Writer라는 추상클래스를 상속받아
만들어짐

이렇게 4개의 추상클래스를 상속받아 만들어지는 클래스 중에서 어딘가로 부터 입력을
받을것인지, 어디에다가 쓸것인지를 표현하는 io객체 들이 있음

이러한 클래스들의 구분은 생성자를 보면 알수 있음

4가지 추상클래스(InputStream,OutputStreamReader,Reader,Writer)를 
받아들이는 생성자가 있다면, 
다양한 입출력방법을 제공하는 클래스입니다.
4가지 클래스를 받아들이는 생성자가 없다면, 어디로부터 입력받을 것인지, 
어디에 쓸것인지를 나타내는 클래스입니다.

어디로 부터 입력을 받을것인지 쓸것인지 나타내는 클래스는 1byte나 1캐릭터 단위로
입력하거나 바이트 배열 혹은 캐릭터 배열 단위로 입출력을 하게됨
입력하고 출력하는 메소드가 단순하게 제공 되기 때문에 특별한 방법으로
입력출력하려면 4가지 추상메소드를 생성자에서 받아들이는 IO클래스들을
이용해야함

파일로 부터 입력받고 쓰기 위한 클래스 :
 FileInputStream, FileOutputStream, FileReader, FileWriter

 배열로 부터 입력받고 쓰기 위한 클래스 : 
 ByteArrayInputStream, ByteArrayOutputStream, CharReader, CharWriter
해당 클래스들은 어디로부터, 
어디에라는 대상을 지정할 수 있는 IO클래스입니다. 
이런 클래스를 장식대상 클래스라고 합니다.

DataInputStream, DataOutputStream같은 클래스를 보면 
다양한 데이터 형을 입력받고 출력합니다.

PrintWriter는 다양하게 한줄 출력하는 pintln()메소드를 가지고있습니다.


BufferedReader는 한줄 입력받는 readLine()메소드를 가집니다.
이런 클래스들은 다양한 방식으로 입력하고, 출력하는 기능을 제공합니다. 
이런 클래스를 장식하는 클래스라고 합니다.

자바 IO라고 하는것이 데코레이터 패턴으로 만들어짐 Decorator Pattern이라는것은
하나의 클래스를 장식하는 것처럼 생성자에서 감싸서 새로운 기능을 계속
추가 할 수 있도록 클래스를 만드는 방식
