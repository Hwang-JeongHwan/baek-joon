# 정수 X를 입력 받기 
x = int(input())
# 앞서 계산된 결과를 저장하기 위한 DP 테이블 초기화
d = [0] * 30001

# 다이나믹 프로그래밍(Dynamic Programmming) 진행 (보텀업)
for i in range(2, x + 1):
    # 현재 수에서 1을 뺴는 경우
    d[i] = d[i - 1] + 1 # optimal solution값에 1을 더한값을 넣어줌 
    # 현재의 수가 2로 나누어 떨어지는 경우
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1) # 하나의 연산이 수행된것이기 때문에 1을 더함 2로나눈위치에서의 
        # optimal solution 값에 1을 더한값과 비교해서 더 작은 값으로 업데이트 
        
    # 현재의 수가 3로 나누어 떨어지는 경우
    if i % 3 == 0:
        d[i] = min(d[i], d[i // 3] + 1) # 하나의 연산이 수행된것이기 때문에 1을 더함
        
    # 현재의 수가 5로 나누어 떨어지는 경우
    if i % 5 == 0:
        d[i] = min(d[i], d[i // 5] + 1) # 하나의 연산이 수행된것이기 때문에 1을 더함
    
print(d[x])