# 집합은 다음과 같은 특징이 있음 
# 중복을 허용하지 않음
# 순서가 없음
# - > 어떤 데이터가 존재하는지 아닌지 체크할 때 효과적으로 사용

# 집합은 리스트 혹은 문자열을 이용해서 초기화 할수있음 이때 set()함수를 사용 or
# 중괄호({}) 안에 각 원소를 콤마 기준으로 구분하여 삽입함으로 초기화 할 수 있음
# 데이터의 조회 및 수정에 있어서 O(1)의 시간에 처리할 수 있음 (상수시간)

data = set([1, 1, 2, 3, 4, 4, 5])
print(data)

data1 = {1, 1, 2, 3, 4, 4, 5}
print(data1)

# 집합 자료형의 연산

# 기본적인 집합 연산으로는 합집합, 교집합, 차집합 연산등이 있음

# 합집합: 집합 A에 속하거나 B에 속하는 원소로 이루어진 집합(A U B)
# 교집합: 집합 A에도 속하고 B에도 속하는 원소로 이루어진 집합 (A 교 B)
# 차집합: 집합 A의 원소 중에서 B에 속하지 않은 원소들로 이루어진 집합(A - B)

a = set([1, 2, 3, 4, 5])
b = set([3, 4, 5, 6, 7])

# 합집합
print(a | b)

# 교집합
print(a & b)

# 차집합
print(a - b)

# 집합 자료형 관련 함수

data = set([1, 2, 3])
print(data)

# 새로운 원소 추가
data.add(4)
print(data)

# 새로운 원소 여러개 추가
data.update([5, 6])
print(data)

# 특정한 값을 갖는 원소 삭제
data.remove(3)
print(data)

# 리스트나 튜플은 순서가 있기 때문에 인덱싱을 통해 자료형의 값을 얻을수 있음

# 사전 자료형과 집합 자료형은 순서가 없기 때문에 인덱싱으로 값을 얻을수 없음
# 사전의 키 혹은 집합의 원소를 이용해 O(1)의 시간 복잡도로 조회함

#  키나 원소의 값으로는 변경 불가능한 문자열이나 튜플과 같은 객체가 사용되어야함 
